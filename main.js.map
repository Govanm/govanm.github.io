{"version":3,"sources":["./src/app/weather.service.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/environments/environment.ts","./src/app/weather-code.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/city-search/city-search.component.ts","./src/app/components/city-search/city-search.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {City} from './city';\nimport {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry, tap} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class WeatherService {\n  private errorMessage = '';\n\n  constructor(private http: HttpClient) {\n  }\n\n  getWeatherForCity(selectedCity: string): Observable<City> {\n    this.errorMessage = '';\n    const options = selectedCity.trim() ?\n      {params: new HttpParams().set('city', selectedCity)} : {};\n    return this.http.get<City>('http://localhost:8080/demographics', options).\n    pipe(tap((newCity: City) => console.log(`added city =${newCity.cityName} with temperature=${newCity.temperature}`)))\n      .pipe(catchError(this.handleError));\n  }\n\n  private handleError(): Observable<never> {\n    this.errorMessage = 'It was not possible to find weather information for this city';\n    return throwError(this.errorMessage);\n  }\n\n\n  hasError(): boolean{\n    return this.errorMessage !== '';\n  }\n\n  getError(): string{\n    return this.errorMessage;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <img\n    alt=\"Scania Logo\"\n    src=\"assets/img/scania_logo.JPG\"\n  />\n  <span class=\"toolbar-label\">Weather</span>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum WeatherCode {\nModerate_or_heavy_snow_in_area_with_thunder = 395,\nPatchy_light_snow_in_area_with_thunder = 392,\nModerate_or_heavy_rain_in_area_with_thunder = 389,\nPatchy_light_rain_in_area_with_thunder = 386,\nModerate_or_heavy_showers_of_ice_pellets = 377,\nLight_showers_of_ice_pellets = 374,\nModerate_or_heavy_snow_showers= 371,\nLight_snow_showers = 368,\nModerate_or_heavy_sleet_showers = 365,\nLight_sleet_showers = 362,\nTorrential_rain_shower = 359,\nModerate_or_heavy_rain_shower = 356,\nLight_rain_shower = 353,\nIce_pellets = 350,\nHeavy_snow = 338,\nPatchy_heavy_snow = 335,\nModerate_snow = 332,\nPatchy_moderate_snow = 329,\nLight_snow = 326,\nPatchy_light_snow = 323,\nModerate_or_heavy_sleet = 320,\nLight_sleet = 317,\nModerate_or_Heavy_freezing_rain = 314,\nLight_freezing_rain = 311,\nHeavy_rain = 308,\nHeavy_rain_at_times = 305,\nModerate_rain = 302,\nModerate_rain_at_times = 299,\nLight_rain = 296,\nPatchy_light_rain = 293,\nHeavy_freezing_drizzle = 284,\nFreezing_drizzle = 281,\nLight_drizzle = 266,\nPatchy_light_drizzle = 263,\nFreezing_fog = 260,\nFog = 248,\nBlizzard = 230,\nBlowing_snow = 227,\nThundery_outbreaks_in_nearby = 200,\nPatchy_freezing_drizzle_nearby = 185,\nPatchy_sleet_nearby = 182,\nPatchy_snow_nearby = 179,\nPatchy_rain_nearby = 176,\nMist = 143,\nOvercast = 122,\nCloudy = 119,\nPartly_Cloudy = 116,\nClear_Sunny = 113\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer\" ></footer>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'demographics';\n}\n","<app-header></app-header>\n<div class=\"content\" role=\"main\">\n<app-city-search></app-city-search>\n</div>\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CitySearchComponent } from './components/city-search/city-search.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    CitySearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    HttpClientModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {WeatherService} from '../../weather.service';\nimport {Observable} from 'rxjs';\nimport cityList from '../../../assets/city.list.json';\nimport {map, startWith} from 'rxjs/operators';\nimport {City} from '../../city';\nimport {FormControl} from '@angular/forms';\nimport {WeatherCode} from '../../weather-code';\n\n@Component({\n  selector: 'app-city-search',\n  templateUrl: './city-search.component.html',\n  styleUrls: ['./city-search.component.css']\n})\nexport class CitySearchComponent implements OnInit {\n  selectedCity = '';\n  searchControl = new FormControl();\n  filteredCities: Observable<string[]>;\n  cities: string[] = cityList;\n  searchResult: Array<City> = [];\n\n  constructor(private weatherService: WeatherService) {\n  }\n\n  ngOnInit(): void {\n\n    this.filteredCities =\n      this.searchControl.valueChanges.pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(selectedCityName: string): string[] {\n    const filteredValue = this._normalizeValue(selectedCityName);\n    return this.cities.sort().filter(city => this._normalizeValue(city).startsWith(filteredValue));\n  }\n\n  private _normalizeValue(selectedCityName: string): string {\n    return selectedCityName.toLowerCase().replace(/\\s/g, '');\n  }\n\n  selectCity(selectedCity: string): void {\n    this.selectedCity = selectedCity;\n    console.log('City has been selected ' + selectedCity);\n  }\n\n  addCity(): void {\n    this.weatherService.getWeatherForCity(this.selectedCity).subscribe(newCity => {\n        this.searchResult = this.searchResult.filter(city => newCity.cityName !== city.cityName);\n        this.searchResult.push(newCity);\n      }\n    );\n    this.selectedCity = '';\n    this.filteredCities =\n      this.searchControl.valueChanges.pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  getIconName(weatherCode: number): string {\n    const iconName = WeatherCode[weatherCode];\n    if (iconName === undefined) {\n      return 'na';\n    }\n    return iconName.toLowerCase();\n  }\n\n  delete(selectedCity: City): void {\n    this.searchResult = this.searchResult.filter(city => selectedCity.cityName !== city.cityName);\n  }\n\n  getColor(weatherCode: number): string {\n    const iconName = WeatherCode[weatherCode].toLowerCase();\n    if (iconName.includes('sunny')) {\n      return '#ccce5a';\n    } else if (iconName.includes('cloud') || iconName.includes('overcast')) {\n      return '#807f85';\n    } else if (iconName.includes('rain') || iconName.includes('dizzle')) {\n      return '#6bafe3';\n    } else {\n      return '#2c4370';\n    }\n  }\n}\n","<div class=\"weather-info-content\">\n  <div class=\"city-search-content\">\n    <p class=\"city-search-label\">How's the weather in...</p>\n    <div class=\"search-row\">\n      <mat-form-field class=\"search-form\" [style.width.px]=250 appearance=\"outline\">\n        <input matInput\n               class=\"city-input\"\n               #selectedCityName\n               placeholder=\"City Name\"\n               [formControl]=\"searchControl\"\n               [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)='selectCity($event.option.value)'>\n          <mat-option *ngFor=\"let city of filteredCities |async | slice:0:100 \" [value]=\"city\"> {{city}}</mat-option>\n        </mat-autocomplete>\n        <mat-icon aria-hidden=\"true\" [ngStyle]=\"{'color':'#e6dde2'}\" matPrefix>place</mat-icon>\n      </mat-form-field>\n      <button class=\"search-button\" type=\"button\" onclick=\"this.blur()\"\n              (click)=\"addCity();selectedCityName.value=''\">\n        <mat-icon [ngStyle]=\"{'color':'white'}\"><i class=\"material-icons\">add</i></mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"search-result\">\n    <div class=\"card\" *ngFor=\"let city of searchResult\" [ngStyle]=\"{'backgroundColor':getColor(city.weatherCode)}\">\n      <img alt=\"Weather Status\" class=\"weather-icon\"\n           src=\"../../../assets/img/weather_icons/{{getIconName(city.weatherCode)}}.svg\">\n      <div class=\"city-weather-info\">\n        <button class=\"remove-city\" type=\"button\" onclick=\"this.blur()\"\n                (click)=\"delete(city);\">\n          <mat-icon aria-hidden=\"true\" [ngStyle]=\"{'color':'white'}\" matSuffix>cancel</mat-icon>\n        </button>\n        <div>\n          <span class=\"temperature\">{{city.temperature}}</span>\n          <img alt=\"Celsius\" class=\"celsius\"\n               src=\"../../../assets/img/weather_icons/celsius.svg\">\n        </div>\n        <label title=\"{{city.cityName}}, {{city.country}}\" class=\"city-name\">{{city.cityName}}, {{city.country}}</label>\n      </div>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}